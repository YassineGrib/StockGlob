unit UnProduits_OP;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons, Vcl.ExtCtrls,
  Vcl.Imaging.pngimage, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client;

type
  TfmProduits_OP = class(TForm)
    Image2: TImage;
    Label1: TLabel;
    Label2: TLabel;
    Label5: TLabel;
    Marquelabel: TLabel;
    Label7: TLabel;
    TitelPanel: TPanel;
    spExit: TSpeedButton;
    spLogo: TSpeedButton;
    Titel: TLabel;
    ToolsPanel: TPanel;
    Valider: TSpeedButton;
    Initialiser: TSpeedButton;
    QuantiteMin: TEdit;
    ProduitID: TEdit;
    NomProduit: TEdit;
    NomMarque: TComboBox;
    NomCategorie: TComboBox;
    procedure FormKeyPress(Sender: TObject; var Key: Char);
    procedure FormShow(Sender: TObject);
    procedure InitialiserClick(Sender: TObject);
    procedure spExitClick(Sender: TObject);
  private
    { Private declarations }
     Function GetMaxID: Integer;
     procedure Consulter;
  public
    { Public declarations }
    procedure FillCategoriesAndMarques;
  end;

var
  fmProduits_OP: TfmProduits_OP;

implementation

{$R *.dfm}

uses DmData, UnProduits;






procedure TfmProduits_OP.FormKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then // تحقق من الضغط على مفتاح Enter
    //ValiderClick(Sender); // استدعاء الإجراء ValiderClick
end;

procedure TfmProduits_OP.FormShow(Sender: TObject);
begin
  if Datam.Operation = 'Modifier' then
    begin
      // تعطيل حقل ID عند التعديل
      ProduitID.Enabled := false;
      Consulter;
    end;

  if DataM.Operation = 'Consulter' then
    begin
      // تعطيل الأزرار عند الاستشارة فقط
      Valider.Enabled := False;
      Initialiser.Enabled := False;
      Consulter;
    end;


  if DataM.Operation = 'Ajouter' then
  begin
   ProduitID.Text := inttostr(GetMaxID);
  end;

  // تعيين عنوان النموذج بناءً على العملية الحالية
  Titel.caption := 'G-Stock | Gestion Des Fournisseurs | ' + DataM.Operation;
  FillCategoriesAndMarques;
  ProduitID.Text:= inttostr(Getmaxid);

end;



procedure TfmProduits_OP.Consulter;
begin
  // ملء الحقول ببيانات الموظف المحددة من قاعدة البيانات
  ProduitID.Text          := fmProduits.FDQFillDbGrid.FieldByName('ProduitID').AsString;
  NomProduit.Text         := fmProduits.FDQFillDbGrid.FieldByName('NomProduit').AsString;
  nomCategorie.Text       := fmProduits.FDQFillDbGrid.FieldByName('nomCategorie').AsString;
  nomMarque.Text          := fmProduits.FDQFillDbGrid.FieldByName('nomMarque').AsString;
  QuantiteMin.Text        := fmProduits.FDQFillDbGrid.FieldByName('QuantiteMin').AsString;

end;

Function TfmProduits_OP.GetMaxID: Integer;
var
  FDQuery: TFDQuery;
begin
  FDQuery := TFDQuery.Create(nil);
  try
    FDQuery.Connection := DataM.FDConnection;
    FDQuery.SQL.Text := 'SELECT MAX(ProduitID) AS MaxID FROM TProduits';
    FDQuery.Open;
    Result := FDQuery.FieldByName('MaxID').AsInteger + 1;
  finally
    FDQuery.Free;
  end;
end;



procedure TfmProduits_OP.InitialiserClick(Sender: TObject);
begin
  NomProduit.Clear;
  nomCategorie.Clear;
  nomMarque.Clear;
  NomProduit.Clear;
  QuantiteMin.Clear;
  FillCategoriesAndMarques;
end;

procedure TfmProduits_OP.spExitClick(Sender: TObject);
begin
Close;
end;

procedure TfmProduits_OP.FillCategoriesAndMarques;
var
  FDQueryCategories, FDQueryMarques: TFDQuery;
begin
  // إنشاء استعلام جديد لملء الفئات
  FDQueryCategories := TFDQuery.Create(Self);
  try
    FDQueryCategories.Connection := DataM.FDConnection;
    FDQueryCategories.SQL.Text := 'SELECT CategorieID, NomCategorie FROM TCategories';
    FDQueryCategories.Open;

    // ملء القائمة المنسدلة للفئات
    nomCategorie.Items.Clear;
    while not FDQueryCategories.Eof do
    begin
      nomCategorie.Items.AddObject(
        FDQueryCategories.FieldByName('NomCategorie').AsString,
        TObject(FDQueryCategories.FieldByName('CategorieID').AsInteger)
      );
      FDQueryCategories.Next;
    end;
  finally
    FDQueryCategories.Free;
  end;

  // إنشاء استعلام جديد لملء العلامات التجارية
  FDQueryMarques := TFDQuery.Create(Self);
  try
    FDQueryMarques.Connection := DataM.FDConnection;
    FDQueryMarques.SQL.Text := 'SELECT MarqueID, NomMarque FROM TMarques';
    FDQueryMarques.Open;

    // ملء القائمة المنسدلة للعلامات التجارية
    nomMarque.Items.Clear;
    while not FDQueryMarques.Eof do
    begin
      nomMarque.Items.AddObject(
        FDQueryMarques.FieldByName('NomMarque').AsString,
        TObject(FDQueryMarques.FieldByName('MarqueID').AsInteger)
      );
      FDQueryMarques.Next;
    end;
  finally
    FDQueryMarques.Free;
  end;
end;







end.
